var concreteModule = require('./../modules/concreteModule.js');module.exports = (function (){	var test1 = function(){		console.log('Test 1');		var expectedValue = 1;		var realValue = concreteModule.searchByConcreteClass('P1', 'M100').length;		if(expectedValue === realValue){			console.log("[Test passed]");			return true;		}		else{			console.log("[Test failed] : function should return 1 element(1 object with 5 elements) ");			return false;		}	};			var test2 = function(){		console.log('Test 2');		var expectedValue = 0;		var realValue = concreteModule.searchByConcreteClass('Test', 'Test1').length;		if(expectedValue === realValue){			console.log("[Test passed]");			return true;		}		else{			console.log("[Test failed] : function should return empty list ");			return false;		}	};	var test3 = function(){		console.log('Test 3');		var expectedValue = 4;		var realValue = concreteModule.getAllFluidities().length;		if(expectedValue === realValue){			console.log("[Test passed]");			return true;		}		else{			console.log("[Test failed] : function should return 4 elements ");			return false;		}	};	var test4 = function(){		console.log('Test 4');		var expectedValue = 11;		var realValue = concreteModule.getAllClasses().length;		if(expectedValue === realValue){			console.log("[Test passed]");			return true;		}		else{			console.log("[Test failed] : function should return 11 elements ");			return false;		}	};	var test5 = function(){		console.log('Test 5');		var expectedValue = 4;		var realValue = concreteModule.getAll().length;		if(expectedValue === realValue){			console.log("[Test passed]");			return true;		}		else{			console.log("[Test failed] : function should return 4 elements ");			return false;		}	};	var test6 = function(){		console.log('Test 6');		var expectedValue = 4;		var realValue = concreteModule.searchCost().length;		if(expectedValue === realValue){			console.log("[Test passed]");			return true;		}		else{			console.log("[Test failed] : function should return 4 elements ");			return false;		}	};		return {		test1: test1,		test2: test2,		test3: test3,		test4: test4,		test5: test5,		test6: test6    };})();